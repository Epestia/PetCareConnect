{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isAuthenticated = false;\n  }\n  login(username, password) {\n    if (username === 'utilisateur' && password === 'motdepasse') {\n      this.isAuthenticated = true;\n      return true;\n    }\n    return false;\n  }\n  logout() {\n    this.isAuthenticated = false;\n  }\n  isAuthenticatedUser() {\n    return this.isAuthenticated;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","isAuthenticated","login","username","password","logout","isAuthenticatedUser","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\d.menegon\\Desktop\\PetcarConnect2\\src\\app\\_services\\auth.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private isAuthenticated: boolean = false;\n\n  login(username: string, password: string): boolean {\n    if (username === 'utilisateur' && password === 'motdepasse') {\n      this.isAuthenticated = true;\n      return true;\n    }\n    return false;\n  }\n\n  logout(): void {\n    this.isAuthenticated = false;\n  }\n\n  isAuthenticatedUser(): boolean {\n    return this.isAuthenticated;\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,WAAW;EAHxBC,YAAA;IAIU,KAAAC,eAAe,GAAY,KAAK;;EAExCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,IAAID,QAAQ,KAAK,aAAa,IAAIC,QAAQ,KAAK,YAAY,EAAE;MAC3D,IAAI,CAACH,eAAe,GAAG,IAAI;MAC3B,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEAI,MAAMA,CAAA;IACJ,IAAI,CAACJ,eAAe,GAAG,KAAK;EAC9B;EAEAK,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACL,eAAe;EAC7B;EAAC,QAAAM,CAAA,G;qBAjBUR,WAAW;EAAA;EAAA,QAAAS,EAAA,G;WAAXT,WAAW;IAAAU,OAAA,EAAXV,WAAW,CAAAW,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}